//If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
//Find the sum of all the multiples of 3 or 5 below 1000.
function fun(num) {
  var sum = 0;
  for(i = 3, j = 5; i < num; i+=3) {
    sum += i;
    if(i > j) {
      sum += j;
      j += 5;
    }
    if(i == j) {
      j += 5;
    }
  }
  return sum;
}
console.log(fun(1000));


//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
function fibEven(num) {
  var sum = 0;
  var currVal = 2;
  var lasVal = 1;
  while(currVal < num) {
    if(currVal%2===0) sum += currVal;
    var temp = currVal;
    currVal += lasVal;
    lasVal = temp;
  }
  return sum;
}
console.log(fibEven(4000000));


//The prime factors of 13195 are 5, 7, 13 and 29.
//What is the largest prime factor of the number 600851475143 ?
function larPriDiv(num) {
  //var num = 600851475143;
  var prime = 2;
  while(num != prime) {
    if(num%prime===0) num /= prime;
    else {
      while(true) {
        prime++;
        var i = 1;
        for(i=prime-1; i>1; i--) {
          if(prime%i===0) break;
        }
        if(i===1) break;
      }
    }
  }
  return prime;
}
console.log(larPriDiv(600851475143));
